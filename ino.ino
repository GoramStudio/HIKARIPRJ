#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

const uint8_t animation[][512] PROGMEM = {
  {0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11000000, 0b01111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11000000, 0b00001111, 0b00000011, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11000000, 0b00100000, 0b00000000, 0b01111100, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11100000, 0b00000000, 0b00000000, 0b00000000, 0b00000111, 0b11111111, 0b11111111, 0b11111111, 0b11100000, 0b00000000, 0b00000000, 0b00000000, 0b00000111, 0b11111111, 0b11111111, 0b11111111, 0b11100000, 0b00000000, 0b00000000, 0b00000000, 0b00000111, 0b11111111, 0b11111111, 0b11111111, 0b11110000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b11111111, 0b11111111, 0b11111111, 0b11110000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b00000000, 0b00000001, 0b00011111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b00000000, 0b00000000, 0b00110111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000001, 0b00000000, 0b01111111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00000001, 0b11111110, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000001, 0b00000000, 0b00000001, 0b11111110, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00000011, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00011100, 0b00000000, 0b00000111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00011111, 0b00000011, 0b11100111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00001111, 0b00000011, 0b11101111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b00000011, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000000, 0b00011111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000000, 0b00011111, 0b11111011, 0b11111111, 0b11111111, 0b11110111, 0b11111111, 0b00000000, 0b00000000, 0b00111111, 0b11111111, 0b11111111, 0b11111111, 0b11101111, 0b11111111, 0b00000000, 0b00000000, 0b01111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b10000000, 0b00000100, 0b01111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b00000011, 0b11111111, 0b11011111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11110011, 0b00000111, 0b11111111, 0b10001111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11100101, 0b11100111, 0b11111111, 0b00001111, 0b11111111, 0b11111111, 0b11111011, 0b11111111, 0b11011000, 0b00000111, 0b11111111, 0b01000111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b10011110, 0b00100111, 0b11111110, 0b00000111, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b00111000, 0b00000111, 0b11111110, 0b00000111, 0b11111111, 0b11111111, 0b11111111, 0b11101110, 0b01110000, 0b00000111, 0b11111110, 0b00000011, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b11110000, 0b00000111, 0b11111110, 0b00000010, 0b11111111, 0b11111111, 0b11111111, 0b11111001, 0b11100000, 0b00000111, 0b11111110, 0b00000000, 0b00111111, 0b11111111, 0b11111111, 0b11111001, 0b11110000, 0b00000111, 0b11111110, 0b00010000, 0b00001111, 0b11111111, 0b11111111, 0b11111001, 0b11110000, 0b00000011, 0b11111110, 0b00000000, 0b00000011, 0b11111111, 0b11111111, 0b11111011, 0b11100000, 0b00000011, 0b11111110, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11110011, 0b11100000, 0b00000001, 0b11111110, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111011, 0b11100000, 0b00001001, 0b11111100, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111101, 0b11110000, 0b00001100, 0b01111000, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111000, 0b11110000, 0b00000100, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111110, 0b01110000, 0b00000011, 0b10010100, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11110000, 0b00000011, 0b11111100, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11110000, 0b00000011, 0b11111110, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111000, 0b00000011, 0b11111111, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000001, 0b11111110, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b11111100, 0b00000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b11111100, 0b01000000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b11110000, 0b01100000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b11110000, 0b11110000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11111110, 0b00000000, 0b00000001, 0b11111000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11100110, 0b00000000, 0b00000111, 0b11111000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11100001, 0b00000000, 0b00001111, 0b11111000, 0b00000000, 0b11111111, 0b11111111, 0b11111111, 0b11110000, 0b00000000, 0b00001101, 0b11111100, 0b00000000},
};

void setup() {
  display.begin(0x3C, true);
  display.clearDisplay();
}

void loop() {
  for (int i = 0; i < sizeof(animation)/sizeof(animation[0]); i++) {
    display.clearDisplay();
    int xOffset = (SCREEN_WIDTH - 64) / 2;
    int yOffset = (SCREEN_HEIGHT - 64) / 2;
    for (int y = 0; y < 64; y++) {
      for (int x = 0; x < 64; x++) {
        uint8_t byteIndex = (y * 64 + x) / 8;
        uint8_t bitIndex = 7 - (x % 8);
        if (pgm_read_byte(&animation[i][byteIndex]) & (1 << bitIndex)) {
          display.drawPixel(x + xOffset, y + yOffset, SH110X_WHITE);
        }
      }
    }
    display.display();
    delay(100);
  }
}
